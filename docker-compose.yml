###############################################################################
#
# Copyright (c) 2023 Tal Aharon
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

###############################################################################

################################################################################
# Docker Compose Configuration for Hacker News REST API Application
#
# This Docker Compose file defines the services and configuration for running
# the application. It sets up two containers: one for the MySQL database and 
# another for the Hacker News application itself.
#
# Usage:
# - Use 'docker-compose up' to start the containers.
# - Access the Hacker News application at http://localhost:8080 in your browser.
#
# Note:
# - You can customize environment variables and container configurations as needed.
# - Ensure you have the necessary Docker images available (e.g., mysql:8.0).
# - The 'bored-network' network is created to enable communication between containers.
# - Data for the MySQL database is persisted in a volume named 'dbvol'.
#
################################################################################

version: '3.8'
services:
  db:
    container_name: db
    image: mysql:8.0
    networks:
      - bored-network

    # If you are using mvn and did not create a .env file
    # you can hard code the valuse or just do:
    env_file: .env
    #environment:
    #  - MYSQL_PASSWORD=password
    #  - MYSQL_DATABASE=news_posts
    #  - MYSQL_ROOT_PASSWORD=password
    volumes:
      - dbvol:/var/lib/mysql
    ports:
      - "3306:3306"

  news_posts_app:
    build:
      context: .
    container_name: hacker-news-container
    image: yamtaldev/hacker-news:latest
    ports:
      - "8080:8080"
    networks:
      - bored-network
    depends_on:
      - db

    # If you are using mvn and did not create a .env file
    # you can hard code the valuse or just do:
    env_file: .env
    #environment:
    #  - MYSQL_HOST=db
    #  - MYSQL_PASSWORD=password
    #  - MYSQL_ROOT_PASSWORD=password
    #  - MYSQL_DATABASE=news_posts
    #  - MYSQL_PORT=3306

networks:
  bored-network:
    name: bored-network

volumes:
  dbvol: